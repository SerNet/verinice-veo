image: eclipse-temurin:21-jdk

variables:
  ORG_GRADLE_PROJECT_ci: 'true'
  CI_DEBUG_SERVICES: "true"
  PROXY: $HTTPS_PROXY_HOST
  AUTH_URL: $OIDC_URL_DEV/realms/$OIDC_REALM_DEV

# Verification (tests and code analysis) is unnecessary on 'develop' &
# 'master', because only verified MRs can be merged into those branches.
.verification:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $CI_COMMIT_BRANCH == "develop"
      when: never
    - when: on_success

stages:
  - build
  - check
  - integration_test
  - deployment

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: always

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

build:
  stage: build
  rules:
    - when: on_success
  variables:
    IMAGE_NAME: eu.gcr.io/veo-projekt/veo
    GOOGLE_APPLICATION_CREDENTIALS: $GCR_ACCESS_TOKEN
  script:
    - env
    - |-
      ADDITIONAL_TAGS="pipeline-id-${CI_PIPELINE_ID}"
      if grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+$' <<<$CI_COMMIT_TAG; then export ADDITIONAL_TAGS="$ADDITIONAL_TAGS,$CI_COMMIT_TAG,latest"; fi;
      if [ "$CI_COMMIT_REF_NAME" = "develop" ]; then export ADDITIONAL_TAGS="$ADDITIONAL_TAGS,develop"; fi;
    - ./gradlew -i -PciBuildNumber=$CI_PIPELINE_ID -PciJobName=$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME -PciCommitId=$CI_COMMIT_SHA jib -Djib.console=plain -Djib.to.image="$IMAGE_NAME:gitlab-git-${CI_COMMIT_SHA}" -Djib.to.tags="$ADDITIONAL_TAGS"
  interruptible: true
  cache:
    - key: gradle
      paths:
        - .gradle
    - key: $CI_PROJECT_PATH
      paths:
        - build
      policy: push

test:
  stage: check
  rules:
    - !reference [.verification, rules]
  script: ./gradlew -PciBuildNumber=$CI_PIPELINE_ID -PciJobName=$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME -i test
  interruptible: true
  services:
  - name: postgres:13.14-alpine
    alias: db
    variables:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
  variables:
    SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
    SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
    SPRING_RABBITMQ_HOST: $RABBITMQ_HOST
    SPRING_RABBITMQ_USERNAME: $RABBITMQ_USERNAME
    SPRING_RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
    VEO_MESSAGE_ROUTINGKEYPREFIX: "VEO_TEST_PIPELINE_${CI_PIPELINE_ID}."
    VEO_MESSAGE_QUEUES_VEO: "VEO_TEST_${CI_PIPELINE_ID}"
    VEO_MESSAGE_QUEUES_VEOSUBSCRIPTIONS: "VEO_TEST_VEOSUBSCRIPTIONS_${CI_PIPELINE_ID}"

  artifacts:
    when: always
    reports:
      junit: '*/build/test-results/test/**/TEST-*.xml'
  cache:
    - key: gradle
      paths:
        - .gradle
    - key: $CI_PROJECT_PATH
      paths:
        - build
      policy: pull

check:
  stage: check
  rules:
    - !reference [ .verification, rules ]
  script:
    - ./gradlew -PciBuildNumber=$CI_PIPELINE_ID -PciJobName=$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME -i check -x test
  interruptible: true
  cache:
    - key: gradle
      paths:
        - .gradle
    - key: $CI_PROJECT_PATH
      paths:
        - build
      policy: pull

http_rest_tests:
  needs:
  - build
  stage: integration_test
  rules:
    - !reference [ .verification, rules ]
  services:
  - name: postgres:13.14-alpine
    alias: db
    variables:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
  - name: eu.gcr.io/veo-projekt/veo:pipeline-id-${CI_PIPELINE_ID}
    alias: veo
    variables:
      JDK_JAVA_OPTIONS: -Dhttp.proxyHost=$PROXY -Dhttp.proxyPort=3128 -Dhttps.proxyHost=$PROXY -Dhttps.proxyPort=3128 -Dhttps.proxySet=true
      LOGGING_LEVEL_ROOT: WARN
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_JACKSON_DESERIALIZATION_FAIL_ON_UNKNOWN_PROPERTIES: 'true'
      SPRING_PROFILES_ACTIVE: background-tasks
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: $AUTH_URL
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: $AUTH_URL/protocol/openid-connect/certs
      VEO_CORS_ORIGINS: https://*.verinice.example, https://frontend.somewhereelse.example
      VEO_DEFAULT_DOMAINTEMPLATE_NAMES: DS-GVO,test-domain
      VEO_ETAG_SALT: zuL4Q8JKdy
  variables:
    FF_NETWORK_PER_BUILD: 1
    SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
    SPRING_RABBITMQ_HOST: $RABBITMQ_HOST
    SPRING_RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
    SPRING_RABBITMQ_USERNAME: $RABBITMQ_USERNAME
    VEO_MESSAGE_CONSUME_AUTODELETE: 'true'
    VEO_MESSAGE_QUEUES_VEO: VEO_REST_TEST_VEO_PIPELINE_${CI_PIPELINE_ID}
    VEO_MESSAGE_QUEUES_VEOSUBSCRIPTIONS: VEO_REST_TEST_VEOSUBSCRIPTIONS_PIPELINE_${CI_PIPELINE_ID}
    VEO_MESSAGE_ROUTINGKEYPREFIX: VEO_REST_TEST_PIPELINE_${CI_PIPELINE_ID}.
    VEO_RESTTEST_BASEURL: http://veo:8070
    VEO_RESTTEST_CLIENTID: $OIDC_CLIENT_DEV
    VEO_RESTTEST_OIDCURL: $OIDC_URL_DEV
    VEO_RESTTEST_PROXYHOST: $PROXY
    VEO_RESTTEST_REALM: $OIDC_REALM_DEV
  script:
    - ./gradlew -i -Dhttp.nonProxyHosts="localhost|veo" -PciBuildNumber=$CI_PIPELINE_ID -PciJobName=$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME restTest
  interruptible: true
  artifacts:
    when: always
    reports:
      junit: veo-rest/build/test-results/restTest/*.xml
  cache:
    - key: gradle
      paths:
        - .gradle
    - key: $CI_PROJECT_PATH
      paths:
        - build
      policy: pull

trigger_deployment:
  stage: deployment
  only:
    - develop
    - tags
  trigger:
    project: veo/verinice-veo-deployment
